dataloader_cfg: &dataloader_cfg
    dataset_cfg: &dataset_cfg # type: ImageBasedDataset
        n_rays: -1 # use the whole iamge
        view_sample: [0, null, 1] # use all views by default
    batch_sampler_cfg: &batch_sampler_cfg
        batch_size: 1

val_dataloader_cfg:
    <<: *dataloader_cfg
    dataset_cfg:
        <<: *dataset_cfg

runner_cfg:
    visualizer_cfg:
        types: ['RENDER', 'DEPTH', 'ALPHA']
    optimizer_cfg:
        lr: 0.
        eps: 1.e-15
        lr_table:
            _xyz: 0.00016
            _features_dc: 0.0025
            _features_rest: 0.000125
            _opacity: 0.05
            _scaling: 0.005
            _rotation: 0.001
    scheduler_cfg:
        type: MultiLR
        scheduler_cfgs:
            '_xyz':
                type: ExponentialLR
                gamma: 0.01
                min_lr: 0.0000016
            '_features_dc':
                type: NoopLR
            '_features_rest':
                type: NoopLR
            '_opacity':
                type: NoopLR
            '_scaling':
                type: NoopLR
            '_rotation':
                type: NoopLR
    epochs: 60
    decay_epochs: 30
    ep_iter: 500 # 30000 by paper
    save_latest_ep: 5
    save_ep: 5
    eval_ep: 5
    log_interval: 1

model_cfg:
    # Custom sampler
    chunkify_rays: False # let the user handle the output and input
    let_user_handle_input: True # let the user handle the output and input
    sampler_cfg:
        type: GaussianTSampler
        use_cudagl: False
        use_diffgl: False

    # Empty renderer and network
    renderer_cfg:
        type: NoopRenderer
    network_cfg:
        type: NoopNetwork # no importrance sampling for this

    # Custom loss
    supervisor_cfg:
        img_loss_type: L1
        img_loss_weight: 0.8
        ssim_loss_weight: 0.2
